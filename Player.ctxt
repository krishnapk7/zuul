#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ This\ class\ is\ part\ of\ the\ "Secret\ Chambers"\ application.\r\n\ A\ "Player"\ is\ the\ main\ character\ which\ does\ all\ the\ inputs\ when\ the\ playing\ the\r\n\ game.\ It\ consists\ of\ the\ player's\ backpack\ which\ holds\ the\ items\ and\ deals\ with\r\n\ the\ weight.\ The\ player\ also\ has\ its\ own\ Strength\ System\ which\ deals\ with\ the\r\n\ health\ and\ damage\ of\ the\ player.\r\n\r\n\ @author\ Krishna\ Prasanna\ Kumar\ (K21004839)\r\n\ @version\ 01/12/2021\r\n
comment1.params=
comment1.target=Player()
comment1.text=\r\n\ Create\ a\ player,\ initially\ it\ has\ an\ empty\ backpack\ and\ no\ name.\r\n
comment10.params=
comment10.target=Room\ getCurrentRoom()
comment10.text=\r\n\ Accessor\ method\r\n\ @return\ currentRoom\ The\ room\ that\ the\ player\ is\ currently\ in.\r\n
comment11.params=
comment11.target=java.lang.String\ getCurrentRoomDetails()
comment11.text=\r\n\ Accessor\ Method\r\n\ Returns\ the\ Long\ description\ of\ the\ current\ room\ that\ the\ player\ is\ in.\r\n
comment12.params=
comment12.target=void\ checkItem()
comment12.text=\r\n\ Checks\ if\ there\ are\ items\ in\ the\ current\ room\ and\ prints\ the\ names\ of\ the\ items.\r\n
comment13.params=
comment13.target=boolean\ playerTransporterRoom()
comment13.text=\r\n\ Accessor\ Method\r\n\ Returns\ whether\ the\ current\ room\ is\ the\ transporter\ room\ as\ a\ boolean,\ true\r\n\ if\ it\ is\ and\ false\ if\ not.\r\n
comment14.params=allRooms
comment14.target=Room\ transport(java.util.ArrayList)
comment14.text=\r\n\ Accessor\ Method\r\n\ @param\ allRooms\ Takes\ in\ an\ ArrayList\ of\ Room\r\n\ Returns\ a\ new\ room\ tha\ is\ randomly\ generated\ from\ the\ ArrayList\ given.\r\n
comment15.params=command
comment15.target=void\ goRoom(Command)
comment15.text=\ \r\n\ Try\ to\ go\ in\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ If\ there\ is\ a\ door\ then\ it\ will\ print\ a\ different\ message.\r\n\ Adds\ the\ current\ room\ to\ a\ stack\ which\ is\ then\ used\ for\ the\ "back"\ command\r\n\ @param\ command\ Takes\ in\ the\ user's\ command\r\n
comment16.params=command
comment16.target=void\ back(Command)
comment16.text=\r\n\ Back\ method\ used\ to\ go\ back\ to\ previous\ rooms,\ uses\ a\ stack\ and\ pops\ the\ top\ room.\r\n\ @param\ command\ Takes\ in\ the\ user's\ command.\r\n
comment17.params=command
comment17.target=void\ takeItem(Command)
comment17.text=\r\n\ Takes\ the\ item\ from\ the\ current\ room\ and\ places\ it\ in\ the\ bag\ if\ the\ \r\n\ item\ exists\ and\ is\ in\ the\ current\ room.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input.\r\n
comment18.params=item
comment18.target=void\ updateWeaponDamage(Item)
comment18.text=\r\n\ Updates\ the\ player\ damage\ if\ the\ item\ is\ a\ weapon\ if\ its\ not\ a\ weapon\ then\r\n\ it\ skips\ over\ this\ method.\r\n\ @param\ item\ Takes\ in\ the\ item\ which\ is\ to\ be\ checked\ if\ its\ a\ weapon\r\n
comment19.params=command
comment19.target=void\ dropItem(Command)
comment19.text=\r\n\ Drops\ the\ item\ that\ is\ specified\ from\ the\ user,\ it\ removes\ the\ item\ from\r\n\ the\ backpack\ and\ adds\ it\ to\ the\ current\ room.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ as\ a\ command.\r\n
comment2.params=damage
comment2.target=void\ updatePlayerDamage(int)
comment2.text=\r\n\ Updates\ the\ player's\ damage\ when\ either\ a\ potion\ is\ used\ or\ a\ weapon\ has\ been\ acquired.\r\n\ @param\ damage\ Takes\ in\ the\ damage\ that\ has\ to\ be\ added\ as\ an\ integer.\r\n
comment20.params=command
comment20.target=void\ look(Command)
comment20.text=\r\n\ Look\ method\ that\ looks\ around\ the\ room\ to\ see\ what's\ in\ the\ current\ room.\r\n\ Prints\ whatever\ is\ in\ the\ current\ room.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ as\ a\ command.\r\n
comment21.params=command
comment21.target=void\ checkBackpackItems(Command)
comment21.text=\r\n\ Prints\ whatever\ the\ backpack\ contains\ and\ the\ remaining\ weight.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ as\ a\ command.\r\n
comment22.params=
comment22.target=Item\ checkWeapons()
comment22.text=\r\n\ Accessor\ Method\r\n\ Returns\ an\ item\ if\ it\ is\ a\ weapon\ and\ is\ present\ in\ the\ backpack,\ if\ not\r\n\ it\ returns\ null.\r\n
comment23.params=itemName
comment23.target=boolean\ doesItemExist(java.lang.String)
comment23.text=\r\n\ Check\ if\ the\ item\ is\ in\ the\ bag\r\n\ @param\ itemName\ Takes\ in\ the\ name\ of\ the\ item\ as\ a\ String\r\n\ @return\ True\ if\ the\ item\ is\ in\ the\ backpack\ and\ false\ if\ not.\r\n
comment24.params=itemName
comment24.target=void\ deletePlayerItem(java.lang.String)
comment24.text=\r\n\ Removes\ the\ item\ from\ the\ backpack.\r\n\ @param\ itemName\ Takes\ in\ the\ user's\ name\ as\ a\ String.\r\n
comment25.params=command
comment25.target=void\ openRoom(Command)
comment25.text=\r\n\ Opens\ the\ door\ if\ the\ player\ has\ a\ key\ in\ the\ backpack.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ as\ a\ command.\r\n
comment26.params=command
comment26.target=void\ inspect(Command)
comment26.text=\r\n\ Inspects\ an\ item\ that\ is\ in\ the\ current\ room\ and\ prints\ the\ details\ of\ the\r\n\ item.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ as\ a\ command\r\n
comment27.params=
comment27.target=boolean\ checkTreasureRoom()
comment27.text=\r\n\ Checks\ whether\ the\ current\ room\ is\ a\ treasure\ room\r\n\ @return\ True\ if\ it\ is\ and\ false\ if\ not\r\n
comment28.params=
comment28.target=void\ emptyStack()
comment28.text=\r\n\ Empties\ the\ stack,\ used\ when\ the\ player\ has\ transported\ and\ cannot\ go\ back.\r\n
comment3.params=
comment3.target=int\ getPlayerDamage()
comment3.text=\r\n\ Accessor\ Method\r\n\ Returns\ the\ player\ damage\ using\ a\ method\ in\ the\ Strength\ class\r\n
comment4.params=health
comment4.target=void\ gainPlayerHealth(int)
comment4.text=\r\n\ Gains\ health\ when\ a\ potion\ has\ beeen\ used\ in\ the\ World\ Class\r\n\ @param\ health\ Takes\ in\ the\ additional\ health\ that\ is\ to\ be\ added\ to\ the\ current\ health.\r\n
comment5.params=
comment5.target=int\ getHealth()
comment5.text=\r\n\ Accessor\ Method\r\n\ Returns\ the\ current\ health\ of\ the\ player\ as\ an\ integer.\r\n
comment6.params=damage
comment6.target=void\ losePlayerHealth(int)
comment6.text=\r\n\ Loses\ health\ when\ attacking\ an\ enemy,\ updates\ the\ health\ of\ the\ player\ using\r\n\ the\ Strength\ class.\r\n\ @param\ damage\ Takes\ in\ the\ damage\ dealt\ as\ an\ integer.\r\n
comment7.params=userName
comment7.target=void\ setName(java.lang.String)
comment7.text=\r\n\ Sets\ the\ username\ for\ the\ user\ by\ taking\ in\ the\ input.\r\n\ @param\ userName\ New\ name\ for\ the\ user\ as\ a\ String.\r\n
comment8.params=
comment8.target=java.lang.String\ getPlayerName()
comment8.text=\r\n\ Accessor\ Method\r\n\ @return\ name\ The\ name\ of\ the\ player\ as\ a\ String\r\n
comment9.params=room
comment9.target=void\ setCurrentRoom(Room)
comment9.text=\r\n\ Set\ a\ new\ as\ the\ current\ room\ for\ the\ player.\r\n\ @param\ room\ The\ new\ room\ of\ the\ player.\r\n
numComments=29
