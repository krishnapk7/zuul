#BlueJ class context
comment0.target=World
comment0.text=\r\n\ \ This\ World\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ items,\ enemies,\ the\ parser\ and\ the\ player.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \ \r\n\ \ @author\ Krishna\ Prasanna\ Kumar\ (K21004839)\r\n\ \ @version\ 02/12/2021\r\n
comment1.params=
comment1.target=World()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ World\r\n
comment10.params=command
comment10.target=boolean\ processCommand(Command)
comment10.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
comment11.params=command
comment11.target=void\ checkStrength(Command)
comment11.text=\r\n\ Prints\ the\ player's\ current\ health\ and\ damage.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\r\n
comment12.params=command
comment12.target=void\ drink(Command)
comment12.text=\r\n\ Updates\ the\ user's\ health\ or\ damage\ depending\ on\ the\ potion.\r\n\ Prints\ the\ new\ damage\ or\ health\r\n\ @param\ command\ Takes\ in\ the\ user's\ input\ \r\n
comment13.params=command
comment13.target=void\ transport(Command)
comment13.text=\r\n\ Updates\ the\ player's\ current\ room\ if\ the\ input\ is\ "transport"\ at\ the\ transporter\ room.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input.\r\n
comment14.params=command
comment14.target=void\ attackNPC(Command)
comment14.text=\r\n\ Attacks\ the\ NPC\ when\ the\ user\ inputs\ "attack".\r\n\ Updates\ both\ the\ enemy's\ health\ and\ the\ player's\ health.\r\n\ @param\ command\ Takes\ in\ the\ user's\ input.\r\n
comment15.params=
comment15.target=void\ printHelp()
comment15.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ a\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment16.params=command
comment16.target=boolean\ quit(Command)
comment16.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ @param\ command\ Takes\ in\ the\ user's\ command.\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment17.params=
comment17.target=void\ createRooms()
comment17.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ Also\ adds\ the\ rooms\ to\ the\ ArrayList\ of\ rooms\ which\ is\ used\ by\ the\ transport\ method\ to\ get\ a\ random\ room.\r\n
comment18.params=
comment18.target=void\ createItems()
comment18.text=\r\n\ Creates\ all\ the\ Items\ and\ their\ appropriate\ parameters.\r\n
comment19.params=
comment19.target=void\ addItems()
comment19.text=\r\n\ Adds\ the\ items\ to\ the\ room\ or\ enemy\ that\ will\ be\ holding\ them\ at\ the\ start\ of\ the\ game.\r\n
comment2.params=
comment2.target=void\ setPlayerName()
comment2.text=\r\n\ Sets\ the\ player's\ name\ by\ using\ the\ parser\ to\ get\ the\ input.\r\n
comment20.params=
comment20.target=void\ createEnding()
comment20.text=\r\n\ Creates\ the\ endings\ for\ the\ treasure\ rooms,\ if\ the\ player\ enters\ these\ rooms\ then\ this\ speech\ will\ be\ displayed\ to\ them.\r\n
comment3.params=
comment3.target=java.lang.String\ getPlayerName()
comment3.text=\r\n\ Accessor\ method\r\n\ @return\ the\ player\ name\ as\ a\ String\r\n
comment4.params=
comment4.target=void\ setStartingLocation()
comment4.text=\r\n\ Sets\ the\ starting\ location\ of\ the\ player\ and\ the\ enemies.\r\n
comment5.params=
comment5.target=java.lang.String\ getCurrentRoomDetails()
comment5.text=\r\n\ Accessor\ Method\r\n\ @return\ the\ current\ room's\ description\ as\ a\ String\r\n
comment6.params=finished
comment6.target=boolean\ parserInfinite(boolean)
comment6.text=\r\n\ Checks\ if\ the\ game\ has\ to\ be\ ended\ either\ by\ the\ player\ dying\ or\ the\ wantToQuit\ is\ true.\r\n\ @param\ finished\ To\ check\ if\ the\ game\ has\ ended\r\n\ @return\ true\ if\ the\ game\ has\ to\ be\ ended,\ false\ if\ the\ game\ should\ continue.\r\n
comment7.params=
comment7.target=void\ checkNPC()
comment7.text=\r\n\ Check\ whether\ an\ npc\ is\ in\ the\ current\ room.\r\n
comment8.params=enemyName
comment8.target=Enemy\ getEnemy(java.lang.String)
comment8.text=\r\n\ Gets\ the\ enemy\ as\ an\ enemy\ object\ from\ a\ string.\r\n\ @param\ enemyName\ Takes\ in\ the\ name\ of\ the\ enemy\ as\ a\ string\r\n\ @return\ null\ if\ the\ enemy\ doesn't\ exist\ or\ the\ enemy\ as\ an\ object.\r\n
comment9.params=
comment9.target=void\ randomMovement()
comment9.text=\r\n\ Everytime\ the\ player\ moves,\ this\ method\ will\ generate\ a\ new\ room\ that\ is\ adjacent\ to\ the\ current\ room\ of\ the\ enemy\ so\ it\ can\ move\ randomly.\r\n
numComments=21
